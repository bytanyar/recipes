{"version":3,"sources":["images/alfredo-sauce.jpg","images/amaretto.jpeg","images/amazing-chicken.png","images/cornucopia.jpg","images/lorem-ipsum-logo.png","data/my_cookbook2019_05_20_12_23_50.xml","components/Parallax/parallax.styled.js","components/Parallax/Parallax.js","data/LoadRecipes.js","components/Modal/recipe-modal.styled.js","components/RecipeParts/ingredients.styled.js","components/RecipeParts/Ingredients.js","components/RecipeParts/instructions.styled.js","components/RecipeParts/Instructions.js","components/Modal/RecipeModal.js","components/RecipesList/recipes-list.styled.js","components/RecipesList/RecipesList.js","actions/recipeActions.js","components/Slideshow/slideshow.styled.js","components/Slideshow/control.styled.js","components/Slideshow/Slideshow.js","components/Forms/NewIngredients.js","components/Forms/NewInstructions.js","components/Forms/NewRecipe.js","reducers/recipeModalVisible.js","store.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ParallaxStyles","styled","div","_templateObject","Parallax","bgStyle","backgroundImage","concat","CornucopiaImage","bgStyleDrink","AmarettoImage","react_default","a","createElement","className","src","ChickenImage","alt","style","LoremIpsumLogo","AlfredoImage","LoadRecipes","setAction","fetch","xml","then","response","text","xmlText","toLowerCase","substr","split","slice","join","recipesData","XMLParser","parseFromString","catch","error","console","log","RecipeModalStyles","recipe_modal_styled_templateObject","IngredientContainerStyles","ingredients_styled_templateObject","Ingredients","_ref","liNodes","recipe","ingredients","getElementsByTagName","map","ingredient","i","lis","li","value","key","InstructionContainerStyles","instructions_styled_templateObject","Instructions","instructions","instruction","RecipeModal","bgImage","closeRecipe","title","onClick","RecipeParts_Ingredients","RecipeParts_Instructions","RecipesContainerStyles","recipes_list_styled_templateObject","connect","state","showRecipe","recipeModalVisible","dispatch","toggleRecipeModal","type","_useState","useState","_useState2","Object","slicedToArray","recipeId","setRecipe","_useState3","_useState4","recipeList","setRecipeList","useEffect","recipes","listingNodes","recipeIdNow","preptime","cooktime","classes","time","id","ev","preventDefault","Modal_RecipeModal","SlideshowStyles","slideshow_styled_templateObject","ControlStyles","control_styled_templateObject","Slideshow","currentIndex","setCurrentIndex","isPlaying","setIsPlaying","timeout","setTimeout","images","length","clearTimeout","slideshowNodes","image","imageClasses","imageId","react_router_dom","to","imageUrl","NewIngredients","newIngredient","onSubmit","ingredientQty","document","getElementById","ingredientUnit","ingredientName","ingredientDescription","htmlFor","disabled","maxLength","NewInstructions","newInstruction","NewRecipe","recipeName","Forms_NewIngredients","Forms_NewInstructions","arguments","undefined","configureStore","initialState","createStore","combineReducers","store","window","initialReduxState","useWindowWidth","innerWidth","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","App","es","basename","process","react_router","path","exact","component","RecipesList","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.902ec69e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alfredo-sauce.af8a7793.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amaretto.fe214cc2.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/amazing-chicken.cdf18a3a.png\";","module.exports = __webpack_public_path__ + \"static/media/cornucopia.9daa0ad8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lorem-ipsum-logo.e41085e5.png\";","module.exports = __webpack_public_path__ + \"static/media/my_cookbook2019_05_20_12_23_50.f3bb926b.xml\";","import styled from 'styled-components';\n\n\nexport const ParallaxStyles = styled.div`\n    .page-image {\n        width: 100%;\n    }\n    .parallax-image {\n        height: 150vh;\n\n        background-attachment: fixed;\n        background-position: center;\n        background-repeat: no-repeat;\n        background-size: cover;\n\n        .hover-text {\n            margin-top: -75vh;\n\n            img {\n                max-width: 150px;\n            }\n        }\n        h3 {\n            color: white;\n            font-size: 3rem;\n            margin: 0;\n            text-shadow: 2px 2px 0 #333;\n        }\n        p {\n            color: white;\n            font-size: 2rem;\n            margin-top: 65vh;\n            text-shadow: 2px 2px 0 #333;\n        }\n    }\n        .food {\n            color: white;\n            font-size: 2rem;\n            margin-top: 25vh;\n            text-shadow: 2px 2px 0 #333;\n        }\n`;","import React, { Component } from 'react';\n\nimport AlfredoImage from '../../images/alfredo-sauce.jpg';\nimport AmarettoImage from '../../images/amaretto.jpeg';\nimport ChickenImage from '../../images/amazing-chicken.png';\nimport CornucopiaImage from '../../images/cornucopia.jpg';\nimport LoremIpsumLogo from '../../images/lorem-ipsum-logo.png';\n\nimport { ParallaxStyles } from './parallax.styled';\n\nconst Parallax = () => {\n    const bgStyle = { backgroundImage: `url(${CornucopiaImage})` };\n    const bgStyleDrink = { backgroundImage: `url(${AmarettoImage})` };\n\n    return (\n        <ParallaxStyles className=\"parallax\">\n            <img className=\"page-image\" src={ChickenImage} alt=\"chicken\" />\n            <div style={bgStyleDrink} className=\"parallax-image\">\n                <div className=\"hover-text\">\n                    <img src={LoremIpsumLogo} alt=\"fake logo\" />\n                    <h3>What&rsquo;s for Dinner?</h3>\n                </div>\n                <p>Gotta be something good!</p>\n            </div>\n            <img className=\"page-image\" src={AlfredoImage} alt=\"sauce\" />\n            <p className=\"food\">Must be the food!</p>\n            <div style={bgStyle} className=\"parallax-image\">\n                <div className=\"hover-text\">\n                    <h3>Still hungry?</h3>\n                </div>\n            </div>\n        </ParallaxStyles>\n    );\n};\n\nexport default Parallax;","import XMLParser from 'react-xml-parser';\n\nimport xml from './my_cookbook2019_05_20_12_23_50.xml';\n\nconst LoadRecipes = (setAction) => {\n    fetch(xml)\n        .then((response) => response.text())\n        .then((xmlText) => {\n            // remove <?xml  ... etc header because react-xml-parser chokes on it\n            if (xmlText.toLowerCase().substr(0, 5) == '<?xml') {\n                xmlText = xmlText.split(/\\?>\\r{0,1}\\n{0,1}/).slice(1).join('?>\\n');\n            }\n            let recipesData = new XMLParser().parseFromString(xmlText);    // Assume xmlText contains the example XML\n\n            setAction(recipesData);\n\n        }).catch((error) => {\n            console.log(\"Parsing error: \", error);\n        });\n}\n\nexport default LoadRecipes;","import styled from 'styled-components';\n\n\nexport const RecipeModalStyles = styled.div`\n\n    .recipe-container {\n        background-color: #ffcb9a;\n        border: 2px solid #444;\n        border-bottom: none;\n        border-radius: 20px 20px 0 0;\n        bottom: 0;\n        left: 12.5%;\n        margin: 5vh auto 0;\n        max-height: calc(90vh - 6em);\n        max-width: 500px;\n        overflow: auto;\n        padding: 5px 15px 0;\n        position: fixed;\n        right: 12.5%;\n        width: 75%;\n        z-index: 1000;\n    }\n    .close-x {\n        background-color: #fff;\n        border: 1px solid #333;\n        border-radius: 50%;\n        padding: 0 5px 2px;\n        position: absolute;\n        right: 15px;\n        text-align: left;\n        top: 5px;\n        width: 20px;\n    }\n    .close-x:hover {\n        background-color: #ccc;\n    }\n    @media only screen and (min-width: 650){\n        .close-x {\n            right: 10px;\n            top: 10px;\n        }\n    }\n`;","import styled from 'styled-components';\n\nexport const IngredientContainerStyles = styled.div`\n    .ingredients-list {\n        list-style: none;\n        padding: 10px;\n        text-align: left;\n    }\n    ul li {\n        display: block;\n        font-size: 0.9em;\n        margin: 0;\n    }\n    @media only screen and (min-width: 650px){\n        .ingredients-list {\n            padding: 10px 40px;\n        }\n        ul li {\n            font-size: 1em;\n        }\n    }\n`;","import React from 'react';\n\nimport { IngredientContainerStyles } from './ingredients.styled.js';\n\nconst Ingredients = ({\n    recipe\n}) => {\n    const ingredients = recipe.getElementsByTagName('ingredient') ? recipe.getElementsByTagName('ingredient') : null;\n\n    let liNodes;\n    const ingredientNodes = ingredients ? ingredients.map((ingredient, i) => {\n        const lis = ingredient.getElementsByTagName('li') ? ingredient.getElementsByTagName('li') : null;\n        liNodes = lis ? lis.map((li, i) => {\n            if (li.value) {\n                return (\n                    <li key={i} className=\"ingredients\">{li.value}</li>\n                )\n            }\n        }) : null;\n        return (\n            { liNodes }\n        );\n    }) : null;\n\n    return (\n        <IngredientContainerStyles>\n            <ul className=\"ingredients-list\">\n                {liNodes}\n            </ul>\n        </IngredientContainerStyles>\n    )\n}\n\nexport default Ingredients;","import styled from 'styled-components';\n\n\nexport const InstructionContainerStyles = styled.div`\n    .instructions-list {\n        list-style: none;\n        padding: 10px;\n        text-align: left;\n    }\n    ul li {\n        display: block;\n        font-size: 0.9em;\n        list-style-type: none;\n        margin: 0;\n    }\n    @media only screen and (min-width: 650px){\n        .instructions-list {\n            padding: 10px 40px;\n        }\n        ul li {\n            font-size: 1em;\n        }\n    }\n`;","import React from 'react';\n\nimport { InstructionContainerStyles } from './instructions.styled';\n\nconst Instructions = ({\n    recipe\n}) => {\n    const instructions = recipe.getElementsByTagName('recipetext') ? recipe.getElementsByTagName('recipetext') : null;\n\n    let liNodes;\n    const instructionNodes = instructions ? instructions.map((instruction, i) => {\n        const lis = instruction.getElementsByTagName('li') ? instruction.getElementsByTagName('li') : null;\n        liNodes = lis ? lis.map((li, i) => {\n            if (li.value) {\n                return (\n                    <li key={i} className=\"instructions\">{li.value}</li>\n                )\n            }\n        }) : null;\n        return (\n            { liNodes }\n        );\n    }) : null;\n\n    return (\n        <InstructionContainerStyles>\n            <ul className=\"instructions-list\">\n                {liNodes}\n            </ul>\n        </InstructionContainerStyles>\n    )\n}\n\nexport default Instructions;","import React from 'react';\n\nimport './recipe-modal.styled.js';\n\nimport Ingredients from '../RecipeParts/Ingredients';\nimport Instructions from '../RecipeParts/Instructions';\n\nimport { RecipeModalStyles } from './recipe-modal.styled';\n\nconst RecipeModal = ({\n    bgImage,\n    closeRecipe,\n    recipe\n}) => {\n    const bgStyle = { backgroundImage: `url(${bgImage})`};\n    const title = recipe.getElementsByTagName('title')[0] ? recipe.getElementsByTagName('title')[0].value : null;\n\n    return (\n        <RecipeModalStyles className=\"recipe-modal-container\">\n            <div className=\"recipe-container\" style={bgImage ? bgStyle : null}>\n                <p className=\"close-x\" onClick={closeRecipe}>x</p>\n                <h2>{title}</h2>\n                <Ingredients recipe={recipe} />\n                <Instructions recipe={recipe} />\n            </div>\n        </RecipeModalStyles>\n    );\n};\n\nexport default RecipeModal;","import styled from 'styled-components';\n\n\nexport const RecipesContainerStyles = styled.div`\n    height: 100vh;\n    margin: 151px auto 0;\n    max-width: 1000px;\n    padding: 20px;\n\n    * {\n        box-sizing: border-box;\n    }\n    .recipe-modal-bg {\n        background-color: rgba(0, 0, 0, 0.5);\n        bottom: 0;\n        left: 0;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n    }\n    .background-fixed img {\n        max-width: 1200px;\n        overflow-y: hidden;\n        transition-duration: 0.5s;\n        transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\n        width: 100vw;\n        z-index: 1;\n    }\n    .recipes-list {\n        background-color: rgba(255, 255, 255, 0.75);\n        border: 1px solid #333;\n        margin: 20px auto;\n        margin-block-end: 0;\n        margin-block-start: 0;\n        max-width: 1000px;\n        padding-inline-start: 0;\n        position: relative;\n        width: 100%;\n\n    }\n    .recipe-id:nth-child(2n) {\n        background-color: rgba(253, 216, 181, 0.5); /* #fdd8b5 */\n    }\n    .recipe {\n        display: flex;\n        justify-content: space-between;\n        list-style: none;\n        padding: 5px 0;\n        text-align: left;\n\n        &:hover,\n        &.active {\n            background-color: #d9b08c;\n        }\n    }\n    .name {\n        font-size: 18px;\n        max-width: 550px;\n        padding-left: 20px;\n        width: 100%;\n    }\n    .time {\n        display: none;\n    }\n    @media only screen and (min-width: 400px){\n        .name {\n            width: 65%;\n        }\n        .time {\n            display: block;\n            max-width: 350px;\n            width: 30%;\n        }\n    }\n    @media only screen and (min-width: 650px){\n        .name {\n            width: 45%;\n        }\n        .time {\n            width: 50%;\n        }\n    }\n`;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    hideRecipeModal,\n    showRecipeModal\n} from '../../actions/recipeActions';\nimport LoadRecipes from '../../data/LoadRecipes';\nimport RecipeModal from '../Modal/RecipeModal';\n\nimport { RecipesContainerStyles } from './recipes-list.styled';\n\n\nconst RecipesList = ({\n    showRecipe,\n    toggleRecipeModal\n}) => {\n    const [recipeId, setRecipe] = useState(0);\n    const [recipeList, setRecipeList] = useState(null);\n\n    useEffect(() => {\n        LoadRecipes(setRecipeList);\n    });\n\n    const recipes = recipeList ? recipeList.getElementsByTagName('recipe') : null;\n    const listingNodes = recipes ? recipes.map((recipe) => {\n        const recipeIdNow = recipe.getElementsByTagName('recipeId')[0] ? recipe.getElementsByTagName('recipeId')[0].value : null;\n        const title = recipe.getElementsByTagName('title')[0] ? recipe.getElementsByTagName('title')[0].value : null;\n        const preptime = recipe.getElementsByTagName('preptime')[0] ? recipe.getElementsByTagName('preptime')[0].value : null;\n        const cooktime = recipe.getElementsByTagName('cooktime')[0] ? recipe.getElementsByTagName('cooktime')[0].value : null;\n        const classes = showRecipe && recipeId === recipeIdNow ? \"recipe active\" : \"recipe\";\n\n        if (title) {\n            const time = preptime && cooktime ? `${preptime} + ${cooktime}` : `${preptime} ${cooktime}`;\n            return (\n                <div id={recipeIdNow} className=\"recipe-id\" key={recipeIdNow}>\n                    <li className={classes} onClick={\n                        (ev) => {\n                            ev.preventDefault();\n                            toggleRecipeModal(showRecipe);\n                            setRecipe(recipeIdNow);\n                        }\n                    }>\n                        <span className=\"name\">{title}</span>\n                        <span className=\"time\">{time}</span>\n                    </li>\n                    {showRecipe && recipeId === recipeIdNow ?\n                        <RecipeModal\n                            closeRecipe={() => toggleRecipeModal(showRecipe)}\n                            recipe={recipe}\n                        />\n                        : null}\n                </div>\n            )\n        }\n    }) : null;\n\n\n    return (\n        <RecipesContainerStyles className=\"recipes-container\">\n            {showRecipe ?\n                <div className=\"recipe-modal-bg\" onClick={toggleRecipeModal} />\n                : null}\n            <ul className=\"recipes-list\">\n                {listingNodes}\n            </ul>\n        </RecipesContainerStyles>\n    );\n}\n\n\n\nconst mapStateToProps = state => {\n    return {\n        showRecipe: state.recipeModalVisible\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleRecipeModal: (showRecipe) => {\n            if (showRecipe) {\n                dispatch(hideRecipeModal());\n            } else {\n                dispatch(showRecipeModal());\n            }\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipesList);","\nexport const SHOW_RECIPE_MODAL = 'SHOW_RECIPE_MODAL';\nexport const showRecipeModal = () => {\n    return {\n        type: SHOW_RECIPE_MODAL\n    };\n};\n\nexport const HIDE_RECIPE_MODAL = 'HIDE_RECIPE_MODAL';\nexport const hideRecipeModal = () => {\n    return {\n        type: HIDE_RECIPE_MODAL\n    };\n};","import styled from 'styled-components';\n\nconst imageHeight = \"calc(100vh - 190px)\";\n\nexport const SlideshowStyles = styled.div`\n    margin-top: 170px;\n    max-height: ${imageHeight};\n    overflow: hidden;\n    padding-bottom: 20px;\n    padding-top: 10px;\n    position: relative;\n\n    h2 {\n        background-color: #fff;\n        border-radius: 0 5px 5px 0;\n        box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.25);\n        color: #333;\n        left: 0;\n        max-width: 80%;\n        padding: 10px 20px;\n        position: absolute;\n        top: 10px;\n    }\n\n    ul {\n        margin-block-end: 0;\n        margin-block-start: 0;\n        padding-inline-start: 0;\n    }\n    li {\n        display: none;\n        list-style: none;\n\n        &.selected {\n            display: block;\n        }\n    }\n    img {\n        height: ${imageHeight};\n    }\n`;","import styled from 'styled-components';\n\n\nexport const ControlStyles = styled.div`\n    bottom: 0;\n    left: 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n    \n    .nav {\n        background-color: rgba(0, 0, 0, 0.5);\n        color: #fff;\n        font-family: \"Algerian\", sans-serif;\n        font-size: 45px;\n        padding: 15px 20px;\n        position: absolute;\n        top: 50%;\n    }\n    .next {\n        right: 0;\n    }\n    .prev {\n        left: 0;\n    }\n    .playing {\n        background-color: rgba(0, 0, 0, 0.5);\n        color: #fff;\n        font-family: \"Webdings\";\n        font-size: 45px;\n        left: calc(50% - 30px);\n        position: absolute;\n        top: calc(100vh - 230px);\n    }\n`;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nimport images from '../../data/images.json';\nimport { SlideshowStyles } from './slideshow.styled';\nimport { ControlStyles } from './control.styled';\n\n\n\nconst Slideshow = () => {\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [isPlaying, setIsPlaying] = useState(false);\n\n    useEffect(() => {\n        if (isPlaying) {\n            const timeout = setTimeout(() => {\n                setCurrentIndex(\n                    (currentIndex + 1) % images.length\n                );\n            }, 3000);\n            return () => clearTimeout(timeout); //cleanup after\n        }\n    }, [currentIndex, isPlaying]); //clean up when these things change\n\n    const goToNext = (images) => {\n        setCurrentIndex(\n            (currentIndex + 1) % images.length   // from stackoverflow\n        );\n    }\n    const goToPrev = (images) => {\n        setCurrentIndex(\n            (currentIndex - 1 + images.length) % images.length   // from stackoverflow\n        );\n    }\n\n    const slideshowNodes = images ? images.map((image, i) => {\n        let imageClasses = image.recipeId === images[currentIndex].recipeId ? 'slideshow-image selected' : 'slideshow-image';\n\n        console.log(images[currentIndex].recipeId);\n\n        return (\n            <li key={image.imageId} className={imageClasses}>\n                <Link className={`list-${image.recipeId}`} to=\"/list\" >\n                    <h2>{image.title}</h2>\n                    <img className=\"recipe-image\" src={`${image.imageUrl}?height=250`} alt={image.title} />\n                </Link>\n            </li>\n        )\n    }) : null;\n\n    return (\n        <SlideshowStyles className=\"slideshow\">\n            <ul className=\"slideshow-container\">\n                {slideshowNodes}\n            </ul>\n            <ControlStyles>\n                <button className=\"nav prev\" onClick={() => goToPrev(images)}>&#10094;</button>\n                <button className=\"nav next\" onClick={() => goToNext(images)}>&#10095;</button>\n\n                {!isPlaying ?\n                    <button className=\"playing play\" onClick={() => {\n                        setIsPlaying(true);\n                    }}>4</button> :\n                    <button className=\"playing pause\" onClick={() => {\n                        setIsPlaying(false);\n                    }}>;</button>}\n            </ControlStyles>\n        </SlideshowStyles>\n    );\n}\n\n\n\n\nexport default Slideshow;","import React from 'react';\n\nimport './new-ingredients.css';\n\nconst NewIngredients = () => {\n\n    let newIngredient;\n\n    const addIngredient = () => {\n        const ingredientQty = document.getElementById('qty') ? document.getElementById('qty').value : null;\n        const ingredientUnit = document.getElementById('unit') ? document.getElementById('unit').value : null;\n        const ingredientName = document.getElementById('item') ? document.getElementById('item').value : null;\n        const ingredientDescription = document.getElementById('description') ? document.getElementById('description').value : null;\n        newIngredient = ingredientQty + ' ' + ingredientUnit + ' ' + ingredientName + ', ' + ingredientDescription;\n        console.log(newIngredient);\n    }\n\n    return (\n        <form id=\"new-ingredient-form\" onSubmit={addIngredient}>\n\n            <label htmlFor=\"ingredients\">Ingredients:</label>\n            <input disabled type=\"text\" className=\"ingredient\" value={newIngredient} />\n            <fieldset id=\"ingredients\" className=\"ingredients\">\n                <input type=\"number\" className=\"ingredient-detail qty\" id=\"qty\" maxLength=\"4\" />\n                <input type=\"text\" className=\"ingredient-detail unit\" id=\"unit\" maxLength=\"6\" />\n                <input type=\"text\" className=\"ingredient-detail item\" id=\"item\" />\n                <input type=\"text\" className=\"ingredient-detail description\" id=\"description\" />\n                <button id=\"add-ingredient\" type=\"submit\">Add Ingredient</button>\n            </fieldset>\n        </form>\n    )\n}\n\nexport default NewIngredients;","import React from 'react';\n\nimport './new-instructions.css';\n\nconst NewInstructions = () => {\n\n    let newInstruction;\n\n    const addInstruction = () => {\n        const instruction = document.getElementById('instruction') ? document.getElementById('instruction').value : null;\n        newInstruction = instruction;\n        console.log(newInstruction);\n    }\n\n    return (\n        <form id=\"new-ingredient-form\" onSubmit={addInstruction}>\n\n            <label htmlFor=\"instructions\">Instructions:</label>\n            <input disabled type=\"text\" className=\"instruction\" value={newInstruction} />\n            <fieldset id=\"instructions\" className=\"instructions\">\n                <input type=\"text\" className=\"instruction-details\" id=\"instruction\" />\n                <button id=\"add-instruction\" type=\"submit\">Add Instruction</button>\n            </fieldset>\n        </form>\n    )\n}\n\nexport default NewInstructions;","import React from 'react';\n\nimport './new-recipe.css';\nimport NewIngredients from './NewIngredients';\nimport NewInstructions from './NewInstructions';\n\nconst NewRecipe = () => {\n\n    const saveRecipe = () => {\n        const recipeName = document.getElementById('recipe-name') ? document.getElementById('recipe-name').value : null;\n        console.log(recipeName);\n    }\n\n    return (\n        <div className=\"main-recipe-form\">\n            <form id=\"new-recipe-form\" onSubmit={saveRecipe}>\n                <label htmlFor=\"recipeName\">Recipe Name</label>\n                <input type=\"text\" id=\"recipe-name\" />\n\n                <button type=\"submit\">Save Recipe Name</button>\n            </form>\n            <NewIngredients />\n            <NewInstructions />\n        </div>\n    )\n}\n\nexport default NewRecipe;","import {\n    SHOW_RECIPE_MODAL,\n    HIDE_RECIPE_MODAL\n} from '../actions/recipeActions';\n\nconst recipeModalVisible = (state = false, action) => {\n    switch (action.type) {\n        case SHOW_RECIPE_MODAL:\n            return true;\n        case HIDE_RECIPE_MODAL:\n            return false;\n        default:\n            return state;\n    }\n};\n\nexport default recipeModalVisible;","/*global*/\n\nimport { createStore } from 'redux';\n\nimport { createReducer } from './reducers';\n\nexport const configureStore = (initialState) => { \n\n    const store = createStore(\n        createReducer(),\n        initialState\n    );\n\n    return store;\n};\n\nexport default (configureStore);","import { combineReducers } from 'redux';\n\nimport recipeModalVisible from './recipeModalVisible';\n\nexport const createReducer = () => {\n    return combineReducers({\n        recipeModalVisible\n    });\n};","import React, { useEffect, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nimport './app.css';\n\nimport Parallax from './components/Parallax/Parallax';\nimport RecipesList from './components/RecipesList/RecipesList';\nimport Slideshow from './components/Slideshow/Slideshow';\nimport NewRecipe from './components/Forms/NewRecipe';\nimport { configureStore } from './store';\n\n// Get the application-wide store instance, prepopulating with state from the server where available.\nconst initialState = (window).initialReduxState;\nconst store = configureStore(initialState);\n\n\nconst App = () => {\n    const windowWidth = useWindowWidth();\n\n    return (\n        <Provider store={store}>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <div className=\"app\">\n                    <header className=\"app-header\">\n                        <h1>Recipes</h1>\n                        <div className=\"window\">{windowWidth}</div>\n                        <nav>\n                            <ul>\n                                <li><Link to=\"/\">Home</Link></li>\n                                <li><Link to=\"/list\">Recipes List</Link></li>\n                                <li><Link to=\"/slideshow\">Slideshow</Link></li>\n                                <li><Link to=\"/newRecipe\">New Recipe</Link></li>\n                            </ul>\n                        </nav>\n                    </header>\n\n\n                    <Route path=\"/\" exact component={Parallax} />\n                    <Route path=\"/list\" exact component={RecipesList} />\n                    <Route path=\"/slideshow\" exact component={Slideshow} />\n                    <Route path=\"/newRecipe\" exact component={NewRecipe} />\n\n                </div>\n            </BrowserRouter>\n        </Provider>\n    );\n}\n\nconst useWindowWidth = () => { //custom hook\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n    useEffect(() => {\n        const handleResize = () => setWindowWidth(window.innerWidth);\n        window.addEventListener('resize', handleResize);\n        return () => { //clean up phase\n            window.removeEventListener('resize', handleResize);\n        }\n    });\n    return windowWidth;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}