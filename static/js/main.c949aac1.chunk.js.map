{"version":3,"sources":["images/alfredo-sauce.jpg","images/amaretto.jpeg","images/amazing-chicken.png","images/cornucopia.jpg","images/lorem-ipsum-logo.png","data/my_cookbook2019_05_20_12_23_50.xml","components/Parallax/parallax.styled.js","components/Parallax/Parallax.js","components/Modal/recipe-modal.styled.js","components/RecipeParts/Ingredients.js","components/RecipeParts/instructions.styled.js","components/RecipeParts/Instructions.js","components/Modal/RecipeModal.js","components/RecipesList/recipes-list.styled.js","components/RecipesList/RecipesList.js","components/Forms/NewIngredients.js","components/Forms/NewInstructions.js","components/Forms/NewRecipe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ParallaxStyles","styled","div","_templateObject","Parallax","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bgStyle","backgroundImage","concat","CornucopiaImage","bgStyleDrink","AmarettoImage","react_default","a","createElement","className","src","ChickenImage","alt","style","LoremIpsumLogo","AlfredoImage","Component","RecipeModalStyles","recipe_modal_styled_templateObject","Ingredients","_ref","liNodes","recipe","ingredients","getElementsByTagName","map","ingredient","i","lis","li","value","key","InstructionContainerStyles","instructions_styled_templateObject","Instructions","instructions","instruction","RecipeModal","bgImage","closeRecipe","title","onClick","RecipeParts_Ingredients","RecipeParts_Instructions","RecipesContainerStyles","recipes_list_styled_templateObject","RecipesList","toggleRecipe","recipeId","recipeState","showRecipe","setState","recipeList","bind","assertThisInitialized","loadRecipes","_this2","fetch","xml","then","response","text","xmlText","toLowerCase","substr","split","slice","join","recipesData","XMLParser","parseFromString","catch","error","console","log","_this3","recipes","listingNodes","preptime","cooktime","classes","time","Modal_RecipeModal","NewIngredients","newIngredient","id","onSubmit","ingredientQty","document","getElementById","ingredientUnit","ingredientName","ingredientDescription","htmlFor","disabled","type","maxLength","NewInstructions","newInstruction","NewRecipe","recipeName","Forms_NewIngredients","Forms_NewInstructions","App","react_router_dom","basename","process","to","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c949aac1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alfredo-sauce.af8a7793.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amaretto.fe214cc2.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/amazing-chicken.cdf18a3a.png\";","module.exports = __webpack_public_path__ + \"static/media/cornucopia.9daa0ad8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lorem-ipsum-logo.e41085e5.png\";","module.exports = __webpack_public_path__ + \"static/media/my_cookbook2019_05_20_12_23_50.0566c8b7.xml\";","import styled from 'styled-components';\r\n\r\n\r\nexport const ParallaxStyles = styled.div`\r\n    .page-image {\r\n        width: 100%;\r\n    }\r\n    .parallax-image {\r\n        height: 150vh;\r\n\r\n        background-attachment: fixed;\r\n        background-position: center;\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n\r\n        .hover-text {\r\n            margin-top: -75vh;\r\n\r\n            img {\r\n                max-width: 150px;\r\n            }\r\n        }\r\n        h3 {\r\n            color: white;\r\n            font-size: 3rem;\r\n            margin: 0;\r\n            text-shadow: 2px 2px 0 #333;\r\n        }\r\n        p {\r\n            color: white;\r\n            font-size: 2rem;\r\n            margin-top: 65vh;\r\n            text-shadow: 2px 2px 0 #333;\r\n        }\r\n    }\r\n        .food {\r\n            color: white;\r\n            font-size: 2rem;\r\n            margin-top: 25vh;\r\n            text-shadow: 2px 2px 0 #333;\r\n        }\r\n`;","import React, { Component } from 'react';\r\n\r\nimport AlfredoImage from '../../images/alfredo-sauce.jpg';\r\nimport AmarettoImage from '../../images/amaretto.jpeg';\r\nimport ChickenImage from '../../images/amazing-chicken.png';\r\nimport CornucopiaImage from '../../images/cornucopia.jpg';\r\nimport LoremIpsumLogo from '../../images/lorem-ipsum-logo.png';\r\n\r\nimport { ParallaxStyles } from './parallax.styled';\r\n\r\nclass Parallax extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        const bgStyle = { backgroundImage: `url(${CornucopiaImage})` };\r\n        const bgStyleDrink = { backgroundImage: `url(${AmarettoImage})` };\r\n        return (\r\n            <ParallaxStyles className=\"parallax\">\r\n                <img className=\"page-image\" src={ChickenImage} alt=\"chicken\" />\r\n                <div style={bgStyleDrink} className=\"parallax-image\">\r\n                    <div className=\"hover-text\">\r\n                        <img src={LoremIpsumLogo} alt=\"fake logo\" />\r\n                        <h3>What&rsquo;s for Dinner?</h3>\r\n                    </div>\r\n                    <p>Gotta be something good!</p>\r\n                </div>\r\n                <img className=\"page-image\" src={AlfredoImage} alt=\"sauce\" />\r\n                <p className=\"food\">Must be the food!</p>\r\n                <div style={bgStyle} className=\"parallax-image\">\r\n                    <div className=\"hover-text\">\r\n                        <h3>Still hungry?</h3>\r\n                    </div>\r\n                </div>\r\n            </ParallaxStyles>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Parallax;","import styled from 'styled-components';\r\n\r\n\r\nexport const RecipeModalStyles = styled.div`\r\n    .recipe-container {\r\n        background-color: beige;\r\n        border-radius: 20px;\r\n        left: 12.5%;\r\n        margin: 5vh auto;\r\n        max-height: 90vh;\r\n        max-width: 500px;\r\n        padding: 5px 15px 15px;\r\n        position: fixed;\r\n        right: 12.5%;\r\n        top: 5vh;\r\n        width: 75%;\r\n        z-index: 1000;\r\n    }\r\n    .close-x {\r\n        background-color: #fff;\r\n        border: 1px solid #333;\r\n        border-radius: 50%;\r\n        padding: 0 5px;\r\n        position: absolute;\r\n        right: 20px;\r\n        text-align: left;\r\n        top: 10px;\r\n        width: 20px;\r\n    }\r\n    .close-x:hover {\r\n        background-color: blanchedalmond;\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport './ingredients.css';\r\n\r\nconst Ingredients = ({\r\n    recipe\r\n}) => {\r\n    const ingredients = recipe.getElementsByTagName('ingredient') ? recipe.getElementsByTagName('ingredient') : null;\r\n\r\n    let liNodes;\r\n    const ingredientNodes = ingredients ? ingredients.map((ingredient, i) => {\r\n        const lis = ingredient.getElementsByTagName('li') ? ingredient.getElementsByTagName('li') : null;\r\n        liNodes = lis ? lis.map((li, i) => {\r\n            if (li.value) {\r\n                return (\r\n                    <li key={i} className=\"ingredients\">{li.value}</li>\r\n                )\r\n            }\r\n        }) : null;\r\n        return (\r\n            { liNodes }\r\n        );\r\n    }) : null;\r\n\r\n    return (\r\n        <ul className=\"ingredients-list\">\r\n            {liNodes}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Ingredients;","import styled from 'styled-components';\r\n\r\n\r\nexport const InstructionContainerStyles = styled.div`\r\n    .instructions-list {\r\n        list-style: none;\r\n        max-height: 35vh;\r\n        overflow-y: auto;\r\n        padding: 10px 40px;\r\n        text-align: left;\r\n    }\r\n    ul li {\r\n        display: block;\r\n        list-style-type: none;\r\n        margin: 0;\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport { InstructionContainerStyles } from './instructions.styled';\r\n\r\nconst Instructions = ({\r\n    recipe\r\n}) => {\r\n    const instructions = recipe.getElementsByTagName('recipetext') ? recipe.getElementsByTagName('recipetext') : null;\r\n\r\n    let liNodes;\r\n    const instructionNodes = instructions ? instructions.map((instruction, i) => {\r\n        const lis = instruction.getElementsByTagName('li') ? instruction.getElementsByTagName('li') : null;\r\n        liNodes = lis ? lis.map((li, i) => {\r\n            if (li.value) {\r\n                return (\r\n                    <li key={i} className=\"instructions\">{li.value}</li>\r\n                )\r\n            }\r\n        }) : null;\r\n        return (\r\n            { liNodes }\r\n        );\r\n    }) : null;\r\n\r\n    return (\r\n        <InstructionContainerStyles>\r\n            <ul className=\"instructions-list\">\r\n                {liNodes}\r\n            </ul>\r\n        </InstructionContainerStyles>\r\n    )\r\n}\r\n\r\nexport default Instructions;","import React from 'react';\r\n\r\nimport './recipe-modal.styled.js';\r\n\r\nimport Ingredients from '../RecipeParts/Ingredients';\r\nimport Instructions from '../RecipeParts/Instructions';\r\n\r\nimport { RecipeModalStyles } from './recipe-modal.styled';\r\n\r\nconst RecipeModal = ({\r\n    bgImage,\r\n    closeRecipe,\r\n    recipe\r\n}) => {\r\n    const bgStyle = { backgroundImage: `url(${bgImage})`};\r\n\r\n    const title = recipe.getElementsByTagName('title')[0] ? recipe.getElementsByTagName('title')[0].value : null;\r\n\r\n    return (\r\n\r\n        <RecipeModalStyles className=\"recipe-modal-container\">\r\n            <div className=\"recipe-container\" style={bgImage ? bgStyle : null}>\r\n                <p className=\"close-x\" onClick={closeRecipe}>x</p>\r\n                <h2>{title}</h2>\r\n                <Ingredients recipe={recipe} />\r\n                <Instructions recipe={recipe} />\r\n            </div>\r\n        </RecipeModalStyles>\r\n    )\r\n}\r\n\r\nexport default RecipeModal;","import styled from 'styled-components';\r\n\r\n\r\nexport const RecipesContainerStyles = styled.div`\r\n    height: 100vh;\r\n    margin: -20px auto 0;\r\n    max-width: 1000px;\r\n    padding: 20px;\r\n\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n    .recipe-modal-bg {\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n        bottom: 0;\r\n        left: 0;\r\n        position: fixed;\r\n        right: 0;\r\n        top: 0;\r\n        z-index: 100;\r\n    }\r\n    .background-fixed img {\r\n        max-width: 1200px;\r\n        overflow-y: hidden;\r\n        transition-duration: 0.5s;\r\n        transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\r\n        width: 100vw;\r\n        z-index: 1;\r\n    }\r\n    .recipes-list {\r\n        background-color: rgba(255, 255, 255, 0.5);\r\n        border: 1px solid #333;\r\n        margin: 20px auto;\r\n        margin-block-end: 0;\r\n        margin-block-start: 0;\r\n        max-width: 1000px;\r\n        padding-inline-start: 0;\r\n        position: relative;\r\n        width: 100%;\r\n    }\r\n    .recipe {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        list-style: none;\r\n        padding: 5px 0;\r\n        text-align: left;\r\n\r\n        &:nth-child(2n){\r\n            background-color: beige;\r\n        }\r\n        &:hover {\r\n            background-color: blanchedalmond;\r\n        }\r\n        &.active {\r\n            background-color: lightblue;\r\n        }\r\n    }\r\n    .name {\r\n        font-size: 18px;\r\n        max-width: 550px;\r\n        padding-left: 20px;\r\n        width: 45%;\r\n    }\r\n    .time {\r\n        max-width: 350px;\r\n        width: 50%;\r\n    }\r\n`;","import React, { Component } from 'react';\r\nimport XMLParser from 'react-xml-parser';\r\n\r\nimport xml from '../../data/my_cookbook2019_05_20_12_23_50.xml';\r\nimport RecipeModal from '../Modal/RecipeModal';\r\n\r\nimport { RecipesContainerStyles } from './recipes-list.styled';\r\n\r\n\r\nclass RecipesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recipeId: 0,\r\n            showRecipe: false,\r\n            recipeList: null\r\n        }\r\n        this.toggleRecipe = this.toggleRecipe.bind(this);\r\n        this.loadRecipes = this.loadRecipes.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadRecipes();\r\n    }\r\n\r\n    loadRecipes() {\r\n        fetch(xml)\r\n            .then((response) => response.text())\r\n            .then((xmlText) => {\r\n                // remove <?xml  ... etc header because react-xml-parser chokes on it\r\n                if (xmlText.toLowerCase().substr(0, 5) == '<?xml') {\r\n                    xmlText = xmlText.split(/\\?>\\r{0,1}\\n{0,1}/).slice(1).join('?>\\n');\r\n                }\r\n                let recipesData = new XMLParser().parseFromString(xmlText);    // Assume xmlText contains the example XML\r\n\r\n                this.setState({\r\n                    recipeList: recipesData\r\n                });\r\n            }).catch((error) => {\r\n                console.log(\"Parsing error: \", error);\r\n            });\r\n    }\r\n\r\n    toggleRecipe = (recipeId) => {\r\n        const recipeState = this.state.showRecipe;\r\n        this.setState({\r\n            recipeId: recipeId,\r\n            showRecipe: !recipeState\r\n        });\r\n    };\r\n    closeRecipe = () => {\r\n        this.setState({\r\n            showRecipe: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const recipes = this.state.recipeList ? this.state.recipeList.getElementsByTagName('recipe') : null;\r\n        const listingNodes = recipes ? recipes.map((recipe) => {\r\n            const recipeId = recipe.getElementsByTagName('recipeId')[0] ? recipe.getElementsByTagName('recipeId')[0].value : null;\r\n            const title = recipe.getElementsByTagName('title')[0] ? recipe.getElementsByTagName('title')[0].value : null;\r\n            const preptime = recipe.getElementsByTagName('preptime')[0] ? recipe.getElementsByTagName('preptime')[0].value : null;\r\n            const cooktime = recipe.getElementsByTagName('cooktime')[0] ? recipe.getElementsByTagName('cooktime')[0].value : null;\r\n            const classes = this.state.showRecipe && this.state.recipeId === recipeId ? \"recipe active\" : \"recipe\";\r\n\r\n            if (title) {\r\n                const time = preptime && cooktime ? `${preptime} + ${cooktime}` : `${preptime} ${cooktime}`;\r\n                return (\r\n                    <span key={recipeId}>\r\n                        <li className={classes} onClick={() => this.toggleRecipe(recipeId)}>\r\n                            <span className=\"name\">{title}</span>\r\n                            <span className=\"time\">{time}</span>\r\n                        </li>\r\n                        {this.state.showRecipe && this.state.recipeId === recipeId ?\r\n                            <RecipeModal\r\n                                closeRecipe={this.closeRecipe}\r\n                                recipe={recipe}\r\n                            />\r\n                            : null}\r\n                    </span>\r\n                )\r\n            }\r\n        }) : null;\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <RecipesContainerStyles className=\"recipes-container\">\r\n                {this.state.showRecipe ?\r\n                    <div className=\"recipe-modal-bg\" onClick={this.closeRecipe} />\r\n                    : null}\r\n                <ul className=\"recipes-list\">\r\n                    {listingNodes}\r\n                </ul>\r\n            </RecipesContainerStyles>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RecipesList;","import React from 'react';\r\n\r\nimport './new-ingredients.css';\r\n\r\nconst NewIngredients = () => {\r\n\r\n    let newIngredient;\r\n\r\n    const addIngredient = () => {\r\n        const ingredientQty = document.getElementById('qty') ? document.getElementById('qty').value : null;\r\n        const ingredientUnit = document.getElementById('unit') ? document.getElementById('unit').value : null;\r\n        const ingredientName = document.getElementById('item') ? document.getElementById('item').value : null;\r\n        const ingredientDescription = document.getElementById('description') ? document.getElementById('description').value : null;\r\n        newIngredient = ingredientQty + ' ' + ingredientUnit + ' ' + ingredientName + ', ' + ingredientDescription;\r\n        console.log(newIngredient);\r\n    }\r\n\r\n    return (\r\n        <form id=\"new-ingredient-form\" onSubmit={addIngredient}>\r\n\r\n            <label htmlFor=\"ingredients\">Ingredients:</label>\r\n            <input disabled type=\"text\" className=\"ingredient\" value={newIngredient} />\r\n            <fieldset id=\"ingredients\" className=\"ingredients\">\r\n                <input type=\"number\" className=\"ingredient-detail qty\" id=\"qty\" maxLength=\"4\" />\r\n                <input type=\"text\" className=\"ingredient-detail unit\" id=\"unit\" maxLength=\"6\" />\r\n                <input type=\"text\" className=\"ingredient-detail item\" id=\"item\" />\r\n                <input type=\"text\" className=\"ingredient-detail description\" id=\"description\" />\r\n                <button id=\"add-ingredient\" type=\"submit\">Add Ingredient</button>\r\n            </fieldset>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewIngredients;","import React from 'react';\r\n\r\nimport './new-instructions.css';\r\n\r\nconst NewInstructions = () => {\r\n\r\n    let newInstruction;\r\n\r\n    const addInstruction = () => {\r\n        const instruction = document.getElementById('instruction') ? document.getElementById('instruction').value : null;\r\n        newInstruction = instruction;\r\n        console.log(newInstruction);\r\n    }\r\n\r\n    return (\r\n        <form id=\"new-ingredient-form\" onSubmit={addInstruction}>\r\n\r\n            <label htmlFor=\"instructions\">Instructions:</label>\r\n            <input disabled type=\"text\" className=\"instruction\" value={newInstruction} />\r\n            <fieldset id=\"instructions\" className=\"instructions\">\r\n                <input type=\"text\" className=\"instruction-details\" id=\"instruction\" />\r\n                <button id=\"add-instruction\" type=\"submit\">Add Instruction</button>\r\n            </fieldset>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewInstructions;","import React from 'react';\r\n\r\nimport './new-recipe.css';\r\nimport NewIngredients from './NewIngredients';\r\nimport NewInstructions from './NewInstructions';\r\n\r\nconst NewRecipe = () => {\r\n\r\n    const saveRecipe = () => {\r\n        const recipeName = document.getElementById('recipe-name') ? document.getElementById('recipe-name').value : null;\r\n        console.log(recipeName);\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-recipe-form\">\r\n            <form id=\"new-recipe-form\" onSubmit={saveRecipe}>\r\n                <label htmlFor=\"recipeName\">Recipe Name</label>\r\n                <input type=\"text\" id=\"recipe-name\" />\r\n\r\n                <button type=\"submit\">Save Recipe Name</button>\r\n            </form>\r\n            <NewIngredients />\r\n            <NewInstructions />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewRecipe;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\n\r\nimport './app.css';\r\n\r\nimport Parallax from './components/Parallax/Parallax';\r\nimport RecipesList from './components/RecipesList/RecipesList';\r\nimport NewRecipe from './components/Forms/NewRecipe';\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                <div className=\"app\">\r\n                    <header className=\"app-header\">\r\n                        <h1>Recipes</h1>\r\n                        <nav>\r\n                            <ul>\r\n                                <li><Link to=\"/\">Home</Link></li>\r\n                                <li><Link to=\"/list\">Recipes List</Link></li>\r\n                                <li><Link to=\"/newRecipe\">New Recipe</Link></li>\r\n                            </ul>\r\n                        </nav>\r\n                    </header>\r\n\r\n\r\n                    <Route path=\"/\" exact component={Parallax} />\r\n                    <Route path=\"/list\" exact component={RecipesList} />\r\n                    <Route path=\"/newRecipe\" exact component={NewRecipe} />\r\n\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}