{"version":3,"sources":["images/amaretto.jpeg","images/alfredo-sauce.jpg","images/amazing-chicken.jpg","components/home.styled.js","components/Home.js","components/Modal/recipe-modal.styled.js","components/RecipeParts/Ingredients.js","components/RecipeParts/Instructions.js","components/Modal/RecipeModal.js","components/RecipesList/recipes-list.styled.js","components/RecipesList/RecipesList.js","components/Forms/NewIngredients.js","components/Forms/NewInstructions.js","components/Forms/NewRecipe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HomeStyles","styled","div","_templateObject","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showSauce","showDrink","window","addEventListener","_onScroll","removeEventListener","sauce","document","getElementById","yPos","pageYOffset","style","top","react_default","a","createElement","id","className","src","ChickenImage","alt","AlfredoImage","AmarettoImage","Component","RecipeModalStyles","recipe_modal_styled_templateObject","Ingredients","_ref","recipe","ingredientNodes","ingredients","map","ingredient","key","qty","unit","item","description","Instructions","instructionNodes","instructions","instruction","i","RecipeModal","bgImage","closeRecipe","bgStyle","backgroundImage","concat","console","log","onClick","name","RecipeParts_Ingredients","RecipeParts_Instructions","RecipesContainerStyles","recipes_list_styled_templateObject","RecipesList","toggleRecipe","recipeId","recipeState","showRecipe","setState","bind","assertThisInitialized","_this2","listingNodes","recipesData","recipes","classes","prepTime","cookTime","Modal_RecipeModal","image","NewIngredients","newIngredient","onSubmit","ingredientQty","value","ingredientUnit","ingredientName","ingredientDescription","htmlFor","disabled","type","maxLength","NewInstructions","newInstruction","NewRecipe","recipeName","Forms_NewIngredients","Forms_NewInstructions","App","react_router_dom","basename","process","to","react_router","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46d284ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/amaretto.fe214cc2.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/alfredo-sauce.af8a7793.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amazing-chicken.3888d290.jpg\";","import styled from 'styled-components';\n\n\nexport const HomeStyles = styled.div`\n    min-height: 150vh;\n\n    img {\n        max-width: 600px;\n        width: 100vw;\n    }\n    #chicken {\n        left: calc((100vw - 600px) / 2);\n        position: absolute;\n        top: 150px;\n        z-index: 1;\n    }\n    #drink {\n        position: relative;\n        top: 750px;\n    }\n    #sauce {\n        left: calc((100vw - 600px) / 2);\n        position: absolute;\n        top: 475px;\n        z-index: 5;\n    }\n`;","import React, { Component } from 'react';\n\nimport AlfredoImage from '../images/alfredo-sauce.jpg';\nimport AmarettoImage from '../images/amaretto.jpeg';\nimport ChickenImage from '../images/amazing-chicken.jpg';\n\nimport { HomeStyles } from './home.styled';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showSauce: false,\n            showDrink: false\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this._onScroll);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this._onScroll);\n    }\n\n    _onScroll(){\n        const sauce = document.getElementById('sauce');\n\n        const yPos = 0 - window.pageYOffset/2;\n        sauce.style.top = 475 + yPos + \"px\";\n    }\n\n    render() {\n        return (\n            <HomeStyles id=\"home\" className=\"home\">\n                <div id=\"chicken\" className=\"background-fixed\">\n                    <img src={ChickenImage} alt=\"chicken\" />\n                </div>\n                <div id=\"sauce\" className=\"background-moving\">\n                    <img src={AlfredoImage} alt=\"sauce\" />\n                </div>\n                <div id=\"drink\" className=\"background-moving\">\n                    <img src={AmarettoImage} alt=\"drink\" />\n                </div>\n            </HomeStyles>\n        );\n    };\n}\n\nexport default Home;","import styled from 'styled-components';\n\n\nexport const RecipeModalStyles = styled.div`\n    .recipe-container {\n        background-color: beige;\n        border-radius: 20px;\n        left: 12.5%;\n        margin: 5vh auto;\n        max-height: 90vh;\n        max-width: 500px;\n        padding: 5px 15px 15px;\n        position: absolute;\n        right: 12.5%;\n        top: 5vh;\n        width: 75%;\n        z-index: 750;\n    }\n    .close-x {\n        background-color: #fff;\n        border: 1px solid #333;\n        border-radius: 50%;\n        padding: 0 5px;\n        position: absolute;\n        right: 20px;\n        text-align: left;\n        top: 10px;\n        width: 20px;\n    }\n    .close-x:hover {\n        background-color: blanchedalmond;\n    }\n`;","import React from 'react';\n\nimport './ingredients.css';\n\nconst Ingredients = ({\n    recipe\n}) => {\n    const ingredientNodes = recipe ? recipe.ingredients.map((ingredient) => {\n        return (\n            <li key={ingredient.id} className=\"ingredients\">{ingredient.qty} {ingredient.unit} {ingredient.item}, {ingredient.description}</li>\n        );\n    }) : null;\n\n    return (\n        <ul className=\"ingredients-list\">\n            {ingredientNodes}\n        </ul>\n    )\n}\n\nexport default Ingredients;","import React from 'react';\n\nimport './instructions.css';\n\nconst Instructions = ({\n    recipe\n}) => {\n    const instructionNodes = recipe ? recipe.instructions.map((instruction, i) => {\n        return (\n            <li key={i} className=\"instructions\">{instruction}</li>\n        );\n    }) : null;\n\n    return (\n        <ul className=\"instructions-list\">\n            {instructionNodes}\n        </ul>\n    )\n}\n\nexport default Instructions;","import React from 'react';\n\nimport './recipe-modal.styled.js';\n\nimport Ingredients from '../RecipeParts/Ingredients';\nimport Instructions from '../RecipeParts/Instructions';\n\nimport { RecipeModalStyles } from './recipe-modal.styled';\n\nconst RecipeModal = ({\n    bgImage,\n    closeRecipe,\n    recipe\n}) => {\n    const bgStyle = { backgroundImage: `url(${bgImage})`};\n\n    console.log(bgImage);\n\n    return (\n        <RecipeModalStyles className=\"recipe-modal-container\">\n            <div className=\"recipe-container\" style={bgImage ? bgStyle : null}>\n                <p className=\"close-x\" onClick={closeRecipe}>x</p>\n                <h2>{recipe.name}</h2>\n                <Ingredients recipe={recipe} />\n                <Instructions recipe={recipe} />\n            </div>\n        </RecipeModalStyles>\n    )\n}\n\nexport default RecipeModal;","import styled from 'styled-components';\n\n\nexport const RecipesContainerStyles = styled.div`\n    height: 100vh;\n    margin: -20px auto 0;\n    max-width: 1200px;\n    padding-top: 20px;\n\n    * {\n        box-sizing: border-box;\n    }\n    .recipe-modal-bg {\n        background-color: rgba(0, 0, 0, 0.5);\n        bottom: 0;\n        left: 0;\n        position: absolute;\n        right: 0;\n        top: 0;\n        z-index: 100;\n    }\n    .background-fixed img {\n        max-width: 1200px;\n        overflow-y: hidden;\n        transition-duration: 0.5s;\n        transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\n        width: 100vw;\n        z-index: 1;\n    }\n    .recipes-list {\n        background-color: rgba(255, 255, 255, 0.5);\n        border: 1px solid #333;\n        margin: 20px;\n        margin-block-end: 0;\n        margin-block-start: 0;\n        padding-inline-start: 0;\n        position: relative;\n        z-index: 200;\n    }\n    .recipe {\n        display: flex;\n        justify-content: space-between;\n        list-style: none;\n        padding: 5px 0;\n        text-align: left;\n\n        &:nth-child(2n){\n            background-color: beige;\n        }\n        &:hover {\n            background-color: blanchedalmond;\n        }\n        &.active {\n            background-color: lightblue;\n        }\n    }\n    .name {\n        font-size: 18px;\n        max-width: 350px;\n        padding-left: 20px;\n        width: 45%;\n    }\n    .time {\n        max-width: 150px;\n        width: 20%;\n    }\n    .main-ingredient {\n        max-width: 250px;\n        width: 35%;\n    }\n`;","import React, { Component } from 'react';\n\nimport recipesData from '../../data/recipes.json';\nimport RecipeModal from '../Modal/RecipeModal';\nimport AmarettoImage from '../../images/amaretto.jpeg';\n\nimport { RecipesContainerStyles } from './recipes-list.styled';\n\nclass RecipesList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            recipeId: 0,\n            showRecipe: false\n        }\n        this.toggleRecipe = this.toggleRecipe.bind(this);\n    }\n    toggleRecipe = (recipeId) => {\n        const recipeState = this.state.showRecipe;\n        this.setState({\n            recipeId: recipeId,\n            showRecipe: !recipeState\n        });\n    };\n    closeRecipe = () => {\n        this.setState({\n            showRecipe: false\n        })\n    }\n\n    render() {\n        const listingNodes = recipesData ? recipesData.recipes.map((recipe) => {\n            const classes = this.state.showRecipe && this.state.recipeId === recipe.id ? \"recipe active\" : \"recipe\";\n            return (\n                <span key={recipe.id}>\n                    <li className={classes} onClick={() => this.toggleRecipe(recipe.id)}>\n                        <span className=\"name\">{recipe.name}</span>\n                        <span className=\"time\">{recipe.prepTime + recipe.cookTime} minutes</span>\n                        <span className=\"main-ingredient\">{recipe.ingredients[0].item}</span>\n                    </li>\n                    {this.state.showRecipe && this.state.recipeId === recipe.id ?\n                        <RecipeModal\n                            bgImage={recipe.image}\n                            closeRecipe={this.closeRecipe}\n                            recipe={recipe}\n                        />\n                        : null}\n                </span>\n            )\n        }) : null;\n\n\n\n\n\n        return (\n            <RecipesContainerStyles className=\"recipes-container\">\n                {this.state.showRecipe ?\n                    <div className=\"recipe-modal-bg\" onClick={this.closeRecipe} />\n                    : null}\n                <ul className=\"recipes-list\">\n                    {listingNodes}\n                </ul>\n                <div className=\"background-fixed\">\n                    <img src={AmarettoImage} alt=\"drink\" />\n                </div>\n            </RecipesContainerStyles>\n        );\n    }\n}\n\nexport default RecipesList;","import React from 'react';\n\nimport './new-ingredients.css';\n\nconst NewIngredients = () => {\n\n    let newIngredient;\n\n    const addIngredient = () => {\n        const ingredientQty = document.getElementById('qty') ? document.getElementById('qty').value : null;\n        const ingredientUnit = document.getElementById('unit') ? document.getElementById('unit').value : null;\n        const ingredientName = document.getElementById('item') ? document.getElementById('item').value : null;\n        const ingredientDescription = document.getElementById('description') ? document.getElementById('description').value : null;\n        newIngredient = ingredientQty + ' ' + ingredientUnit + ' ' + ingredientName + ', ' + ingredientDescription;\n        console.log(newIngredient);\n    }\n\n    return (\n        <form id=\"new-ingredient-form\" onSubmit={addIngredient}>\n\n            <label htmlFor=\"ingredients\">Ingredients:</label>\n            <input disabled type=\"text\" className=\"ingredient\" value={newIngredient} />\n            <fieldset id=\"ingredients\" className=\"ingredients\">\n                <input type=\"number\" className=\"ingredient-detail qty\" id=\"qty\" maxLength=\"4\" />\n                <input type=\"text\" className=\"ingredient-detail unit\" id=\"unit\" maxLength=\"6\" />\n                <input type=\"text\" className=\"ingredient-detail item\" id=\"item\" />\n                <input type=\"text\" className=\"ingredient-detail description\" id=\"description\" />\n                <button id=\"add-ingredient\" type=\"submit\">Add Ingredient</button>\n            </fieldset>\n        </form>\n    )\n}\n\nexport default NewIngredients;","import React from 'react';\n\nimport './new-instructions.css';\n\nconst NewInstructions = () => {\n\n    let newInstruction;\n\n    const addInstruction = () => {\n        const instruction = document.getElementById('instruction') ? document.getElementById('instruction').value : null;\n        newInstruction = instruction;\n        console.log(newInstruction);\n    }\n\n    return (\n        <form id=\"new-ingredient-form\" onSubmit={addInstruction}>\n\n            <label htmlFor=\"instructions\">Instructions:</label>\n            <input disabled type=\"text\" className=\"instruction\" value={newInstruction} />\n            <fieldset id=\"instructions\" className=\"instructions\">\n                <input type=\"text\" className=\"instruction-details\" id=\"instruction\" />\n                <button id=\"add-instruction\" type=\"submit\">Add Instruction</button>\n            </fieldset>\n        </form>\n    )\n}\n\nexport default NewInstructions;","import React from 'react';\n\nimport './new-recipe.css';\nimport NewIngredients from './NewIngredients';\nimport NewInstructions from './NewInstructions';\n\nconst NewRecipe = () => {\n\n    const saveRecipe = () => {\n        const recipeName = document.getElementById('recipe-name') ? document.getElementById('recipe-name').value : null;\n        console.log(recipeName);\n    }\n\n    return (\n        <div className=\"main-recipe-form\">\n            <form id=\"new-recipe-form\" onSubmit={saveRecipe}>\n                <label htmlFor=\"recipeName\">Recipe Name</label>\n                <input type=\"text\" id=\"recipe-name\" />\n\n                <button type=\"submit\">Save Recipe Name</button>\n            </form>\n            <NewIngredients />\n            <NewInstructions />\n        </div>\n    )\n}\n\nexport default NewRecipe;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nimport './app.css';\n\nimport Home from './components/Home';\nimport RecipesList from './components/RecipesList/RecipesList';\nimport NewRecipe from './components/Forms/NewRecipe';\n\nclass App extends Component {\n    render() {\n\n\n        return (\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <div className=\"app\">\n                    <header className=\"app-header\">\n                        <h1>Recipes</h1>\n                        <nav>\n                            <ul>\n                                <li><Link to=\"/\">Home</Link></li>\n                                <li><Link to=\"/list\">Recipes List</Link></li>\n                                <li><Link to=\"/newRecipe\">New Recipe</Link></li>\n                            </ul>\n                        </nav>\n                    </header>\n\n\n                    <Route path=\"/\" exact component={Home} />\n                    <Route path=\"/list\" exact component={RecipesList} />\n                    <Route path=\"/newRecipe\" exact component={NewRecipe} />\n\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}