{"version":3,"sources":["images/amaretto.jpeg","images/alfredo-sauce.jpg","images/amazing-chicken.jpg","images/tabletop.jpg","components/Parallax/parallax.styled.js","components/Parallax/Parallax.js","components/Modal/recipe-modal.styled.js","components/RecipeParts/Ingredients.js","components/RecipeParts/Instructions.js","components/Modal/RecipeModal.js","components/RecipesList/recipes-list.styled.js","components/RecipesList/RecipesList.js","components/Forms/NewIngredients.js","components/Forms/NewInstructions.js","components/Forms/NewRecipe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ParallaxStyles","styled","div","_templateObject","Parallax","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bgStyle","backgroundImage","concat","TableTopImage","bgStyleDrink","AmarettoImage","react_default","a","createElement","className","src","ChickenImage","alt","style","AlfredoImage","Component","RecipeModalStyles","recipe_modal_styled_templateObject","Ingredients","_ref","recipe","ingredientNodes","ingredients","map","ingredient","key","id","qty","unit","item","description","Instructions","instructionNodes","instructions","instruction","i","RecipeModal","bgImage","closeRecipe","console","log","onClick","name","RecipeParts_Ingredients","RecipeParts_Instructions","RecipesContainerStyles","recipes_list_styled_templateObject","RecipesList","toggleRecipe","recipeId","recipeState","showRecipe","setState","bind","assertThisInitialized","_this2","listingNodes","recipesData","recipes","classes","prepTime","cookTime","Modal_RecipeModal","image","NewIngredients","newIngredient","onSubmit","ingredientQty","document","getElementById","value","ingredientUnit","ingredientName","ingredientDescription","htmlFor","disabled","type","maxLength","NewInstructions","newInstruction","NewRecipe","recipeName","Forms_NewIngredients","Forms_NewInstructions","App","react_router_dom","basename","process","to","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f17fba2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/amaretto.fe214cc2.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/alfredo-sauce.af8a7793.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amazing-chicken.3888d290.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tabletop.62573cb8.jpg\";","import styled from 'styled-components';\n\n\nexport const ParallaxStyles = styled.div`\n    .page-image {\n        width: 100%;\n    }\n    .parallax-image {\n        height: 100vh;\n\n        background-attachment: fixed;\n        background-position: center;\n        background-repeat: no-repeat;\n        background-size: cover;\n\n        h3 {\n            color: white;\n            font-size: 3rem;\n            margin-top: -50vh;\n            text-shadow: 2px 2px 0 #333;\n        }\n        p {\n            color: white;\n            font-size: 2rem;\n            margin-top: 65vh;\n            text-shadow: 2px 2px 0 #333;\n        }\n    }\n`;","import React, { Component } from 'react';\n\nimport AlfredoImage from '../../images/alfredo-sauce.jpg';\nimport AmarettoImage from '../../images/amaretto.jpeg';\nimport ChickenImage from '../../images/amazing-chicken.jpg';\nimport TableTopImage from '../../images/tabletop.jpg';\n\nimport { ParallaxStyles } from './parallax.styled';\n\nclass Parallax extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    componentDidMount() {\n    }\n\n    componentWillUnmount() {\n    }\n\n\n    render() {\n        const bgStyle = { backgroundImage: `url(${TableTopImage})`};\n        const bgStyleDrink = { backgroundImage: `url(${AmarettoImage})`};\n        return (\n            <ParallaxStyles className=\"parallax\">\n                <img className=\"page-image\" src={ChickenImage} alt=\"chicken\"/>\n                <div style={bgStyleDrink} className=\"parallax-image\">\n                    <h3>What&rsquo;s for Dinner?</h3>\n                    <p>Gotta be something good!</p>\n                </div>\n                <img className=\"page-image\" src={AlfredoImage} alt=\"sauce\"/>\n                <div style={bgStyle} className=\"parallax-image\">\n                </div>\n            </ParallaxStyles>\n        );\n    };\n}\n\nexport default Parallax;","import styled from 'styled-components';\n\n\nexport const RecipeModalStyles = styled.div`\n    .recipe-container {\n        background-color: beige;\n        border-radius: 20px;\n        left: 12.5%;\n        margin: 5vh auto;\n        max-height: 90vh;\n        max-width: 500px;\n        padding: 5px 15px 15px;\n        position: absolute;\n        right: 12.5%;\n        top: 5vh;\n        width: 75%;\n        z-index: 750;\n    }\n    .close-x {\n        background-color: #fff;\n        border: 1px solid #333;\n        border-radius: 50%;\n        padding: 0 5px;\n        position: absolute;\n        right: 20px;\n        text-align: left;\n        top: 10px;\n        width: 20px;\n    }\n    .close-x:hover {\n        background-color: blanchedalmond;\n    }\n`;","import React from 'react';\n\nimport './ingredients.css';\n\nconst Ingredients = ({\n    recipe\n}) => {\n    const ingredientNodes = recipe ? recipe.ingredients.map((ingredient) => {\n        return (\n            <li key={ingredient.id} className=\"ingredients\">{ingredient.qty} {ingredient.unit} {ingredient.item}, {ingredient.description}</li>\n        );\n    }) : null;\n\n    return (\n        <ul className=\"ingredients-list\">\n            {ingredientNodes}\n        </ul>\n    )\n}\n\nexport default Ingredients;","import React from 'react';\n\nimport './instructions.css';\n\nconst Instructions = ({\n    recipe\n}) => {\n    const instructionNodes = recipe ? recipe.instructions.map((instruction, i) => {\n        return (\n            <li key={i} className=\"instructions\">{instruction}</li>\n        );\n    }) : null;\n\n    return (\n        <ul className=\"instructions-list\">\n            {instructionNodes}\n        </ul>\n    )\n}\n\nexport default Instructions;","import React from 'react';\n\nimport './recipe-modal.styled.js';\n\nimport Ingredients from '../RecipeParts/Ingredients';\nimport Instructions from '../RecipeParts/Instructions';\n\nimport { RecipeModalStyles } from './recipe-modal.styled';\n\nconst RecipeModal = ({\n    bgImage,\n    closeRecipe,\n    recipe\n}) => {\n    const bgStyle = { backgroundImage: `url(${bgImage})`};\n\n    console.log(bgImage);\n\n    return (\n        <RecipeModalStyles className=\"recipe-modal-container\">\n            <div className=\"recipe-container\" style={bgImage ? bgStyle : null}>\n                <p className=\"close-x\" onClick={closeRecipe}>x</p>\n                <h2>{recipe.name}</h2>\n                <Ingredients recipe={recipe} />\n                <Instructions recipe={recipe} />\n            </div>\n        </RecipeModalStyles>\n    )\n}\n\nexport default RecipeModal;","import styled from 'styled-components';\n\n\nexport const RecipesContainerStyles = styled.div`\n    height: 100vh;\n    margin: -20px auto 0;\n    max-width: 1200px;\n    padding-top: 20px;\n\n    * {\n        box-sizing: border-box;\n    }\n    .recipe-modal-bg {\n        background-color: rgba(0, 0, 0, 0.5);\n        bottom: 0;\n        left: 0;\n        position: absolute;\n        right: 0;\n        top: 0;\n        z-index: 100;\n    }\n    .background-fixed img {\n        max-width: 1200px;\n        overflow-y: hidden;\n        transition-duration: 0.5s;\n        transition-timing-function: cubic-bezier(0, 1, 0.5, 1);\n        width: 100vw;\n        z-index: 1;\n    }\n    .recipes-list {\n        background-color: rgba(255, 255, 255, 0.5);\n        border: 1px solid #333;\n        margin: 20px;\n        margin-block-end: 0;\n        margin-block-start: 0;\n        padding-inline-start: 0;\n        position: relative;\n        z-index: 200;\n    }\n    .recipe {\n        display: flex;\n        justify-content: space-between;\n        list-style: none;\n        padding: 5px 0;\n        text-align: left;\n\n        &:nth-child(2n){\n            background-color: beige;\n        }\n        &:hover {\n            background-color: blanchedalmond;\n        }\n        &.active {\n            background-color: lightblue;\n        }\n    }\n    .name {\n        font-size: 18px;\n        max-width: 350px;\n        padding-left: 20px;\n        width: 45%;\n    }\n    .time {\n        max-width: 150px;\n        width: 20%;\n    }\n    .main-ingredient {\n        max-width: 250px;\n        width: 35%;\n    }\n`;","import React, { Component } from 'react';\n\nimport recipesData from '../../data/recipes.json';\nimport RecipeModal from '../Modal/RecipeModal';\nimport AmarettoImage from '../../images/amaretto.jpeg';\n\nimport { RecipesContainerStyles } from './recipes-list.styled';\n\nclass RecipesList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            recipeId: 0,\n            showRecipe: false\n        }\n        this.toggleRecipe = this.toggleRecipe.bind(this);\n    }\n    toggleRecipe = (recipeId) => {\n        const recipeState = this.state.showRecipe;\n        this.setState({\n            recipeId: recipeId,\n            showRecipe: !recipeState\n        });\n    };\n    closeRecipe = () => {\n        this.setState({\n            showRecipe: false\n        })\n    }\n\n    render() {\n        const listingNodes = recipesData ? recipesData.recipes.map((recipe) => {\n            const classes = this.state.showRecipe && this.state.recipeId === recipe.id ? \"recipe active\" : \"recipe\";\n            return (\n                <span key={recipe.id}>\n                    <li className={classes} onClick={() => this.toggleRecipe(recipe.id)}>\n                        <span className=\"name\">{recipe.name}</span>\n                        <span className=\"time\">{recipe.prepTime + recipe.cookTime} minutes</span>\n                        <span className=\"main-ingredient\">{recipe.ingredients[0].item}</span>\n                    </li>\n                    {this.state.showRecipe && this.state.recipeId === recipe.id ?\n                        <RecipeModal\n                            bgImage={recipe.image}\n                            closeRecipe={this.closeRecipe}\n                            recipe={recipe}\n                        />\n                        : null}\n                </span>\n            )\n        }) : null;\n\n\n\n\n\n        return (\n            <RecipesContainerStyles className=\"recipes-container\">\n                {this.state.showRecipe ?\n                    <div className=\"recipe-modal-bg\" onClick={this.closeRecipe} />\n                    : null}\n                <ul className=\"recipes-list\">\n                    {listingNodes}\n                </ul>\n                <div className=\"background-fixed\">\n                    <img src={AmarettoImage} alt=\"drink\" />\n                </div>\n            </RecipesContainerStyles>\n        );\n    }\n}\n\nexport default RecipesList;","import React from 'react';\n\nimport './new-ingredients.css';\n\nconst NewIngredients = () => {\n\n    let newIngredient;\n\n    const addIngredient = () => {\n        const ingredientQty = document.getElementById('qty') ? document.getElementById('qty').value : null;\n        const ingredientUnit = document.getElementById('unit') ? document.getElementById('unit').value : null;\n        const ingredientName = document.getElementById('item') ? document.getElementById('item').value : null;\n        const ingredientDescription = document.getElementById('description') ? document.getElementById('description').value : null;\n        newIngredient = ingredientQty + ' ' + ingredientUnit + ' ' + ingredientName + ', ' + ingredientDescription;\n        console.log(newIngredient);\n    }\n\n    return (\n        <form id=\"new-ingredient-form\" onSubmit={addIngredient}>\n\n            <label htmlFor=\"ingredients\">Ingredients:</label>\n            <input disabled type=\"text\" className=\"ingredient\" value={newIngredient} />\n            <fieldset id=\"ingredients\" className=\"ingredients\">\n                <input type=\"number\" className=\"ingredient-detail qty\" id=\"qty\" maxLength=\"4\" />\n                <input type=\"text\" className=\"ingredient-detail unit\" id=\"unit\" maxLength=\"6\" />\n                <input type=\"text\" className=\"ingredient-detail item\" id=\"item\" />\n                <input type=\"text\" className=\"ingredient-detail description\" id=\"description\" />\n                <button id=\"add-ingredient\" type=\"submit\">Add Ingredient</button>\n            </fieldset>\n        </form>\n    )\n}\n\nexport default NewIngredients;","import React from 'react';\n\nimport './new-instructions.css';\n\nconst NewInstructions = () => {\n\n    let newInstruction;\n\n    const addInstruction = () => {\n        const instruction = document.getElementById('instruction') ? document.getElementById('instruction').value : null;\n        newInstruction = instruction;\n        console.log(newInstruction);\n    }\n\n    return (\n        <form id=\"new-ingredient-form\" onSubmit={addInstruction}>\n\n            <label htmlFor=\"instructions\">Instructions:</label>\n            <input disabled type=\"text\" className=\"instruction\" value={newInstruction} />\n            <fieldset id=\"instructions\" className=\"instructions\">\n                <input type=\"text\" className=\"instruction-details\" id=\"instruction\" />\n                <button id=\"add-instruction\" type=\"submit\">Add Instruction</button>\n            </fieldset>\n        </form>\n    )\n}\n\nexport default NewInstructions;","import React from 'react';\n\nimport './new-recipe.css';\nimport NewIngredients from './NewIngredients';\nimport NewInstructions from './NewInstructions';\n\nconst NewRecipe = () => {\n\n    const saveRecipe = () => {\n        const recipeName = document.getElementById('recipe-name') ? document.getElementById('recipe-name').value : null;\n        console.log(recipeName);\n    }\n\n    return (\n        <div className=\"main-recipe-form\">\n            <form id=\"new-recipe-form\" onSubmit={saveRecipe}>\n                <label htmlFor=\"recipeName\">Recipe Name</label>\n                <input type=\"text\" id=\"recipe-name\" />\n\n                <button type=\"submit\">Save Recipe Name</button>\n            </form>\n            <NewIngredients />\n            <NewInstructions />\n        </div>\n    )\n}\n\nexport default NewRecipe;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nimport './app.css';\n\nimport Parallax from './components/Parallax/Parallax';\nimport RecipesList from './components/RecipesList/RecipesList';\nimport NewRecipe from './components/Forms/NewRecipe';\n\nclass App extends Component {\n    render() {\n\n\n        return (\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <div className=\"app\">\n                    <header className=\"app-header\">\n                        <h1>Recipes</h1>\n                        <nav>\n                            <ul>\n                                <li><Link to=\"/\">Home</Link></li>\n                                <li><Link to=\"/list\">Recipes List</Link></li>\n                                <li><Link to=\"/newRecipe\">New Recipe</Link></li>\n                            </ul>\n                        </nav>\n                    </header>\n\n\n                    <Route path=\"/\" exact component={Parallax} />\n                    <Route path=\"/list\" exact component={RecipesList} />\n                    <Route path=\"/newRecipe\" exact component={NewRecipe} />\n\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}